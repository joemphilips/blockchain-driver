# https://circleci.com/docs/2.0/language-javascript/
version: 2
jobs:
  "start-blockchains":
    docker: true
    steps:
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker-compose up -d
            docker run --network container:contacts \
            appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080/contacts/test
  "node-8":
    docker:
      - image: circleci/node:8
    working_directory: ~/typescript-starter
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
      - run: npx nyc report --reporter=lcov | npx codecov
      - run: npm run cov:check
  "node-latest":
    docker:
      - image: circleci/node:latest
    working_directory: ~/typescript-starter
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
      - run: npx nyc report --reporter=lcov | npx codecov
      - run: npm run cov:check

workflows:
  version: 2
  build:
    jobs:
      - "start-blockchains"
      - "node-8":
          requires:
            - "start-blockchains"
      - "node-latest":
          requires:
            - "start-blockchains"
